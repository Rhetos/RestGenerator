Module TestAction
{
	Action ReturnError '(parameter, repository, userInfo)
		=> throw new Rhetos.UserException(
			$"TestError, {parameter.DateTime}, {(parameter.Binary != null ? BitConverter.ToString(parameter.Binary) : "null")}.")'
	{
		Binary Binary;
		DateTime DateTime;
	}

	Action ReturnUserError '(parameter, repository, userInfo)
		=> throw new Rhetos.UserException(
			parameter.TestUserMessage,
			parameter.TestSystemMessage)'
	{
		ShortString TestUserMessage;
		ShortString TestSystemMessage;
	}

	Action ReturnClientError '(parameter, repository, userInfo)
		=> throw new Rhetos.ClientException("test exception")'
	{
	}

	QueryableExtension ReturnServerError Common.Claim '(query, repository)
		=> throw new ArgumentException("test exception")';

	Action ReturnLocalizedUserError '(parameter, repository, userInfo)
		=> throw new Rhetos.UserException(
			parameter.TestUserMessage,
			Enumerable.Range(0, parameter.MessageParameterCount.Value).Select(x => (object)(x+1000)).ToArray())'
	{
		ShortString TestUserMessage;
		Integer MessageParameterCount;
	}
}
